{"version":3,"sources":["jquery-asDropdown.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsDropdownEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","skin","panel","clickoutHide","imitateSelect","select","data","onInit","onShow","onHide","onChange","asDropdown","element","options","arguments","undefined","$element","$parent","parent","metas","each","k","v","re","RegExp","test","toLowerCase","replace","extend","classes","show","trigger","mask","wrapper","disabled","addClass","$children","children","$panel","_parse","isShow","initialized","_trigger","init","value","that","on","eventName","toggle","set","hide","eventType","_len","params","Array","_key","concat","NAMESPACE$1","onFunction","word","substring","toUpperCase","apply","events","split","join","_generateMask","window","_position","_clearMask","removeClass","document","off","$item","text","appendTo","$mask","remove","offset","height","outerHeight","width","outerWidth","panelWidth","panelHeight","top","left","scrollTop","scrollLeft","css","position","string","includes","next","html","$wrapper","isPlainObject"],"mappings":"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","file":"jquery-asDropdown.min.js","sourcesContent":["/**\n* jquery asDropdown v0.2.2\n* https://github.com/amazingSurge/jquery-asDropdown\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'asDropdown',\n  skin: null,\n  panel: '+', //jquery selector to find content in the page, or '+' means adjacent siblings\n  clickoutHide: true, //When clicking outside of the dropdown, trigger hide event\n  imitateSelect: false, //let select value show in trigger bar\n  select: null, //set initial select value, when imitateSelect is set to true\n  data: 'value',\n\n  //callback comes with corresponding event\n  onInit: null,\n  onShow: null,\n  onHide: null,\n  onChange: null\n};\n\nconst NAMESPACE$1 = 'asDropdown';\n\n/**\n * Plugin constructor\n **/\nclass asDropdown {\n  constructor(element, options = {}) {\n    this.element = element;\n    this.$element = $(element);\n    this.$parent = this.$element.parent();\n\n    // options\n    const metas = [];\n    $.each(this.$element.data(), (k, v) => {\n      const re = new RegExp(\"^asDropdown\", \"i\");\n      if (re.test(k)) {\n        metas[k.toLowerCase().replace(re, '')] = v;\n      }\n    });\n    this.options = $.extend( {}, DEFAULTS, options, metas);\n\n    this.namespace = this.options.namespace;\n    this.classes = {\n      skin: `${this.namespace}_${this.options.skin}`,\n      show: `${this.namespace}_show`,\n      trigger: `${this.namespace}-trigger`,\n      mask: `${this.namespace}-mask`,\n      wrapper: `${this.namespace}-wrapper`,\n      panel: `${this.namespace}-panel`,\n      disabled: `${this.namespace}_disabled`\n    };\n\n    // skin\n    if (this.options.skin !== null) {\n      this.$element.addClass(this.classes.skin);\n    }\n\n    this.$children = this.$element.children();\n\n    // content\n    this.$panel = this._parse(this.options.panel);\n\n    //state\n    this.isShow = false;\n    this.disabled = false;\n    this.initialized = false;\n    //init\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    const that = this;\n    this.$parent.addClass(this.classes.wrapper);\n    this.$element.addClass(this.namespace).addClass(this.classes.trigger);\n    this.$panel.addClass(this.classes.panel);\n\n    this.$element.on(this.eventName('click'), () => {\n      that.toggle();\n      return false;\n    });\n\n    this.$panel.on(this.eventName('click'), 'li', function() {\n      that.set($(this).data(that.options.data));\n      that.hide();\n      return false;\n    });\n\n    if (this.options.select !== null) {\n      this.set(this.options.select);\n    }\n\n    this._trigger('ready');\n    this.initialized = true;\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  eventName(events) {\n    if (typeof events !== 'string' || events === '') {\n      return `.${this.options.namespace}`;\n    }\n    events = events.split(' ');\n\n    let length = events.length;\n    for (let i = 0; i < length; i++) {\n      events[i] = `${events[i]}.${this.options.namespace}`;\n    }\n    return events.join(' ');\n  }\n\n  show() {\n    const that = this;\n    if (this.disabled) {\n      return;\n    }\n    if (this.options.clickoutHide) {\n      this._generateMask();\n    }\n\n    $(window).on(this.eventName('resize'), () => {\n      that._position();\n      return false;\n    });\n    this.isShow = true;\n    this.$element.addClass(this.classes.show);\n    this.$panel.addClass(this.classes.show);\n\n    this._position();\n    this._trigger('show');\n  }\n\n  hide() {\n    this.isShow = false;\n    if (this.options.clickoutHide) {\n      this._clearMask();\n    }\n\n    this.$element.removeClass(this.classes.show);\n    this.$panel.removeClass(this.classes.show);\n    $(document).off(this.eventName('mousedown'));\n\n    this._trigger('hide');\n  }\n\n  set(value) {\n    if (this.options.imitateSelect) {\n      let $item = null;\n      const that = this;\n\n      that.$panel.children().each(function() {\n        if ($(this).data(that.options.data) === value) {\n          $item = $(this);\n          that.value = value;\n        }\n      });\n      if (!$item) {\n        return;\n      }\n      this.$element.text($item.text());\n      if (this.$children.length) {\n        this.$children.appendTo(this.$element);\n      }\n    }\n    if (this.initialized) {\n      this._trigger('change', value);\n    }\n  }\n\n  _generateMask() {\n    const that = this;\n    this.$mask = $('<div></div>').addClass(this.classes.mask).show().appendTo('body');\n    this.$mask.on(this.eventName('click'), () => {\n      that.hide();\n      return false;\n    });\n  }\n\n  _clearMask() {\n    if (this.$mask) {\n      this.$mask.off(this.eventName());\n      this.$mask.remove();\n      this.$mask = null;\n    }\n  }\n\n  toggle() {\n    if (this.isShow) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  _position() {\n    const offset = this.$element.offset();\n    const height = this.$element.outerHeight();\n    const width = this.$element.outerWidth();\n    const panelWidth = this.$panel.outerWidth(true);\n    const panelHeight = this.$panel.outerHeight(true);\n    let top;\n    let left;\n\n    if (panelHeight + height + offset.top > $(window).height() + $(window).scrollTop()) {\n      top = -panelHeight;\n    } else {\n      top = height;\n    }\n    if (panelWidth + offset.left > $(window).width() + $(window).scrollLeft()) {\n      left = width - panelWidth;\n    } else {\n      left = 0;\n    }\n    this.$panel.css({\n      position: 'absolute',\n      top,\n      left\n    });\n  }\n\n  _parse(string) {\n    if (string.includes('+')) {\n      return this.$element.next();\n    }\n    return $(this.options.panel);\n  }\n\n  get() {\n    return this.value;\n  }\n\n  update(html) {\n    this.$panel.html(html);\n  }\n\n  enable() {\n    this.disabled = false;\n    this.$wrapper.removeClass(this.classes.disabled);\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$wrapper.addClass(this.classes.disabled);\n  }\n\n  destroy() {\n    this.hide();\n    this.$element.off(this.eventName());\n    this.$element.remove();\n    $(window).off(this.eventName());\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.2.2'\n};\n\nconst NAMESPACE = 'asDropdown';\nconst OtherAsDropdown = $.fn.asDropdown;\n\nconst jQueryAsDropdown = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asDropdown(this, options));\n    }\n  });\n};\n\n$.fn.asDropdown = jQueryAsDropdown;\n\n$.asDropdown = $.extend({\n  setDefaults: asDropdown.setDefaults,\n  noConflict: function() {\n    $.fn.asDropdown = OtherAsDropdown;\n    return jQueryAsDropdown;\n  }\n}, info);\n"]}